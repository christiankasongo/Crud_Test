@using System.ComponentModel.DataAnnotations
@inject HttpClient Http

@if (ModalType != "Delete")
{
    <MudDialog>
        <DialogContent>
            <EditForm Model="@customer" OnValidSubmit="HandleFormSubmit">
                <DataAnnotationsValidator />
                <MudStack Row="true">
                    <MudTextField @bind-Value="customer.FirstName" Margin="Margin.Dense" Label="First Name"
                                  For="@(() => customer.FirstName)" Variant="Variant.Outlined" Disabled="@disable" />
                    <MudTextField @bind-Value="customer.LastName" Margin="Margin.Dense" Label="Last Name"
                                  For="@(() => customer.LastName)" Variant="Variant.Outlined" Disabled="@disable" />
                </MudStack>
                <MudStack Row="true">
                    <MudTextField @bind-Value="customer.Address" Margin="Margin.Dense" Label="Address"
                                  For="@(() => customer.Address)" Variant="Variant.Outlined" Disabled="@disable" />
                    <MudTextField @bind-Value="customer.Email" Margin="Margin.Dense" Label="Email"
                                  For="@(() => customer.Email)" Variant="Variant.Outlined" Disabled="@disable" />
                </MudStack>
                <MudStack Row="true">
                    <MudTextField @bind-Value="customer.Phone" Margin="Margin.Dense" Disabled="@disable"
                                  Label="Phone Number" Variant="Variant.Outlined" />

                    @if (ModalType == "Edit" || ModalType == "Expand")
                    {
                        <MudCheckBox @bind-Value="@customer.Active" Color="Color.Primary" Disabled="@disable">
                            Customer status: @(customer.Active ? "Active" : "Inactive")
                        </MudCheckBox>
                    }
                </MudStack>
            </EditForm>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            @if (ModalType != "Expand")
            {
                <MudButton ButtonType="ButtonType.Submit" Disabled="@_processing" Variant="Variant.Filled"
                           Color="Color.Primary">
                    @if (_processing)
                    {
                        <MudProgressCircular Class="ms-n1" Size="Size.Small" Indeterminate="true" />
                        <MudText Class="ms-2" Typo="Typo.body2" Align="Align.Center">Processing</MudText>
                    }
                    else
                    {
                        <MudText Typo="Typo.body2" Align="Align.Center">Submit</MudText>
                    }
                </MudButton>
            }
        </DialogActions>
    </MudDialog>
}
else
{
    <MudDialog>
        <DialogContent>
            <MudText>
                Delete @customer.FullName? This process cannot be undone.
            </MudText>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">
                <MudText Class="text-xs">Cancel</MudText>
            </MudButton>
            <MudButton Color="Color.Error" Variant="Variant.Filled" OnClick="DeleteCustomer">
                <MudText Class="text-xs">Deletel</MudText>
            </MudButton>
        </DialogActions>
    </MudDialog>
}

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public Customer customer { get; set; } = new();
    [Parameter] public string ModalType { get; set; }
    bool _processing;
    bool disable;

    protected override void OnInitialized()
    {

        disable = ModalType == "Expand" ? true : false;
    }
    public async Task HandleFormSubmit(EditContext context)
    {
        if (ModalType != "Edit")
        {
            await Http.PostAsJsonAsync("api/AddNew", customer);
        }
        else
        {
            await Http.PatchAsJsonAsync("api/Update", customer);
        }
    }

    public async void DeleteCustomer()
    {
        await Http.DeleteAsync("api/Delete/" + customer.Id);
    }

    void Submit() => MudDialog.Close(DialogResult.Ok(true));
    void Cancel() => MudDialog.Cancel();
}
